syntax = "proto3";

service SearchService {
  // User's methods
  rpc AddProfile (User) returns (AddProfileResponse);
  rpc UpdateProfile (User) returns (UpdateProfileResponse);
  rpc GetProfile(UserInfoByUserIdRequest) returns (User);

  // Professor's methods
  rpc GetListProfessor(ListProfessorRequest) returns (stream GetListProfessorResponse);
  rpc SearchProfessorByName(SearchRequest) returns (stream FindProfessorResponse);
  rpc GetReviewWithProfessor(ReviewsByUserIdRequest) returns (stream ReviewWithProfessorResponse);
  rpc GetListProfessorsByGroup(ListProfessorsByGroupRequest) returns (stream ListProfessorsByGroupResponce);
  
  // Review's methods
  rpc AddReview(Review) returns (AddReviewResponse);
  rpc UpdateReview(Review) returns (UpdateReviewResponse);
  rpc DeleteReview (DeleteReviewRequest) returns (DeleteReviewResponse);
  rpc GetReviewsByProfessorId(ReviewsByProfessorIdRequest) returns (stream ReviewWithUserResponse);

  // Reaction's methods
  rpc AddReaction(Reaction) returns (ReactionResponse);
  rpc DeleteReaction(DeleteReactionRequest) returns (ReactionResponse);
  rpc UpdateReaction(Reaction) returns (ReactionResponse);
}

message ListProfessorsByGroupResponce {
  repeated Professor professors = 1;
}

message ReviewWithProfessorResponse{
  repeated ReviewWithProfessor list = 1;
}

message ReviewWithUserResponse{
  repeated ReviewWithUser list = 1;
}

message FindProfessorResponse{
  repeated Professor professors = 1;
}

message ListProfessorsByGroupRequest {
  int32 count = 1;
  string group = 2;
}

message ReviewWithUser {
  Review review = 1;
  User user = 2;
  Reaction reaction = 3;
}

message ReviewWithProfessor {
  Review review = 1;
  Professor professor = 2;
  Reaction reaction = 3;
}

message ReactionResponse {}

message DeleteReactionRequest {
  string id = 1;
}

message ReviewStream{
  repeated Review reviews = 1;
}

message SearchResponse{
  repeated Professor professors = 1;
}

message SearchRequest{
  string name = 1;
  int32 count = 2;
}

message GetAllProfessorsOnceRequest {}

message GetListProfessorResponse{
  repeated Professor professors = 1;
}

message DeleteReviewRequest{
  string reviewId = 1;
}

message AddProfileResponse {}

message DeleteReviewResponse {}

message UpdateReviewResponse {}

message UpdateProfileResponse {}

message ChangeStatusRequest{
  int32 id = 1;
  string status = 2;
}

message UserInfoByUserIdRequest {
  int32 id = 1;
}

message AddReviewResponse{
  bool passed = 1;
}

message ReviewsByUserIdRequest{
  int32 id = 1;
}

message ListProfessorRequest{
  int32 count = 1;
}

message ReviewsByProfessorIdRequest {
  string id = 1;
}

message User {
  int32 id = 1;
  string name = 2;
  bytes avatar = 3;
  int32 rating = 4;
  string group = 5;
}

message Professor {
  string id = 1;
  string name = 2;
  bytes avatar = 3;
  bytes smallAvatar = 4;
  float rating = 5;
  int32 reviewsCount = 6;
  float objectivity = 7;
  float loyalty = 8;
  float professionalism = 9;
  float harshness = 10;
}

message Review {
  string id = 1;
  int32 userId = 2;
  string comment = 3;
  float objectivity = 4;
  float loyalty = 5;
  float professionalism = 6;
  float harshness = 7;
  string date = 8;
  string professorId = 9;
  int32 likes = 10;
  int32 dislikes = 11;
}

message Reaction {
  string id = 1;
  int32 userId = 2;
  string professorId = 3;
  string reviewId = 4;
  int32 type = 5; // 0 - dislike, 1 - like 
}
